openapi: 3.0.0
info:
  title: ROSSO API
  description: API для управления поставками ROSSO
  version: 1.0.0


paths:
  /auth/register:
    post:
      summary: Регистрация пользователя
      tags:
        - Аутентификация и регистрация
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
      responses:
        "201":
          description: Успешная регистрация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'

  /auth/login:
    post:
      summary: Авторизация пользователя
      tags:
        - Аутентификация и регистрация
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        "200":
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
  
  
  /users/company:
    get:
      summary: Получение всех сотрудников организации
      tags:
        - Пользователи
      operationId: getUserCompany
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCompanyWithUserInfo'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
          
    post:
      summary: Привязка пользователя к уч. записи компании
      tags:
        - Пользователи
      operationId: postUserByLinkCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                link_code:
                  type: integer
                role:
                  type: string
                  enum: ["manager", "employee"]
      responses:
        '204':
          description: No content
        "422":
          $ref: '#/components/responses/UnprocessableEntity'

    delete:
      summary: Удаление уч. записи пользователя из компании
      tags:
        - Пользователи
      operationId: deleteUserByLinkCode
      parameters:
        - name: user_id
          in: query
          required: false
          schema:
            type: integer
      responses:
        '204':
          description: ОК
        "422":
          $ref: '#/components/responses/UnprocessableEntity'

    
                    
  /organizers/register:
    post:
      summary: Регистрация организации
      tags:
        - Организации
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizerRegisterRequest'
      responses:
        "201":
          description: Организация успешно зарегистрирована
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
          

  /products:
    post:
      summary: Добавить новый товар
      tags:
        - Товары
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        "201":
          description: Товар успешно добавлен
        "422":
          $ref: '#/components/responses/UnprocessableEntity'

    get:
      summary: Получить список товаров
      tags:
        - Товары
      parameters:
        - name: supplier_id
          in: query
          required: false
          schema:
            type: integer
        - name: add_quantity
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Список товаров
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
              

  /products/{product_id}:
    get:
      summary: Получить информацию о товаре
      tags:
        - Товары
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Информация о товаре
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'

    put:
      summary: Обновить информацию о товаре
      tags:
        - Товары
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductResponse'
      responses:
        "200":
          description: Товар успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'


  /supplies:
    get:
      summary: Получить список всех поставок
      tags:
        - Поставки
      parameters:
        - name: is_wait_confirm
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Список поставок
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuppliesResponse'
                
    post:
      summary: Создать новую поставку
      tags:
        - Поставки
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyCreateRequest'
      responses:
        "201":
          description: Поставка успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyResponse'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'

  /supplies/{supply_id}:
    get:
      summary: Получить информацию о поставке
      tags:
        - Поставки
      parameters:
      - name: supply_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Список поставок
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyResponse'
    patch:
      summary: Принять/отклонить поставку
      tags:
        - Поставки
      parameters:
      - name: supply_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyAssembleCancelled'
      responses:
        "204":
          description: No content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyResponse'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'

  /supplies/{supply_id}/status:
    patch:
      summary: Изменить статус поставки
      tags:
        - Поставки
      parameters:
        - name: supply_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyStatusUpdate'
      responses:
        "200":
          description: Статус поставки успешно изменен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyResponse'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'

  /suppliers:
    get:
      summary: Получить список поставщиков
      tags:
        - Поставщики
      responses:
        "200":
          description: Список поставщиков
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuppliersResponse'
                
  /suppliers/{supplier_inn}:
    get:
      summary: Получить поставщика по ИНН
      tags:
        - Поставщики
      parameters:
        - name: supplier_inn
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Список поставщиков
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierResponse'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'

  /suppliers/{supplier_id}:
    post:
      summary: Добавить нового поставщика в контакт
      tags:
        - Поставщики
      parameters:
        - name: supplier_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "201":
          description: Поставщик успешно добавлен
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'

    delete:
      summary: Удалить поставщика из контактов
      tags:
        - Поставщики
      parameters:
        - name: supplier_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Поставщик успешно удалён
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizerResponse" 
        "404":
          $ref: '#/components/responses/NotFound'


  /expenses/:
    get:
      summary: Получить все расходы
      tags:
        - Расходы склада
      operationId: getExpenses
      responses:
        '200':
          description: Список всех расходов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expenses'

  /expenses/{expense_id}/:
    patch:
      summary: Обновить количество расхода
      tags:
        - Расходы склада
      operationId: updateExpenseQuantity
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
      responses:
        '200':
          description: Количество обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'

    delete:
      summary: Удалить расход
      tags:
        - Расходы склада
      operationId: deleteExpense
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Расход удален

components:
  responses:
    NotFound:
      description: not found resource response
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnprocessableEntity:
      description: payload value is invalid
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        details:
          oneOf:
            - type: string
            - type: array
      required:
        - details

    UserRegisterRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        password:
          type: string
        user_type:
          type: string
          enum: [organizer, employee]
          
    UserCompanyWithUserInfo:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        role:
          type: string
        user_id:
          type: integer
          
    UsersCompanyWithUserInfo:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserCompanyWithUserInfo'


    UserLoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    AuthResponse:
      type: object
      properties:
        access_token:
          type: string
        type_token:
          type: string
        next_route:
          type: string
          enum: [organizers/register, /]
          
    # Схемы организаций
    OrganizerRegisterRequest:
      type: object
      properties:
        name:
          type: string
        role:
          type: string
          enum: [ company, supplier ]
        address:
          type: string
        inn:
          type: string
        bank_details:
          type: string

    OrganizerResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        role:
          type: string
          enum: [ company, supplier ]
        address:
          type: string
        inn:
          type: string
        bank_details:
          type: string

    
    # Схемы поставок
    SupplyCreateRequest:
      type: object
      properties:
        supplier_id:
          type: integer
        delivery_address:
          type: string
        total_price:
          type: number
          format: float
        supply_products:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: integer
              quantity:
                type: integer

    SupplyAssembleCancelled:
      type: object
      properties:
        status:
          type: string
          enum: [
            cancelled,
            assembled
          ]

    SupplyResponse:
      type: object
      properties:
        id:
          type: integer
        supplier:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        company:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        supply_products:
          type: array
          items:
            type: object
            properties:
              product:
                $ref: "#/components/schemas/ProductResponseSupply"
              quantity:
                type: integer
        couriers_phone:
          type: string
        article:
          type: integer
        delivery_address:
          type: string
        total_price:
          type: number
          format: float
        status:
          type: string
          enum: [
            assembled, 
            in_delivery, 
            adopted,
            delivered,
            cancelled
          ]
        create_datetime: 
          type: string
        delivery_datetime:
          type: string

    SuppliesResponse:
      type: object
      properties:
        supplies:
          type: array
          items:
            $ref: '#/components/schemas/SupplyResponse'

    SupplyStatusUpdate:
      type: object
      properties:
        status:
          type: string
          enum:  [
            assembled, 
            in_delivery, 
            adopted,
            delivered,
          ]
    
    SupplierResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        address:
          type: string
        inn:
          type: string
        bank_details:
          type: string
    

    SuppliersResponse:
      type: object
      properties:
        organizers:
          type: array
          items:
            $ref: '#/components/schemas/SupplierResponse'


    # Схемы товаров
    ProductRequest:
      type: object
      properties:
        name:
          type: string
        category:
          type: string
          enum: [ 
            hair_coloring, 
            hair_care, 
            hair_styling, 
            consumables, perming, 
            eyebrows, 
            manicure_and_pedicure, 
            tools_and_equipment 
            ]
        price:
          type: number
          format: float
        description:
          type: string
        quantity:
          type: integer

    ProductResponse:
      type: object
      properties:
        id:
          type: integer
        article:
          type: integer
        name:
          type: string
        category:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        quantity:
          type: integer
          default: null
        organizer_name:
          type: string
        
          

    ProductResponseSupply:
      type: object
      properties:
        id:
          type: integer
        article:
          type: integer
        name:
          type: string
        category:
          type: string
          enum: [ 
            hair_coloring, 
            hair_care, 
            hair_styling, 
            consumables, perming, 
            eyebrows, 
            manicure_and_pedicure, 
            tools_and_equipment 
            ]
        price:
          type: number
          format: float


    ProductsResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponse'

    Expenses:
      type: object
      properties:
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
              
    Expense:
      type: object
      required:
        - company_id
        - article
        - name
        - category
        - quantity
      properties:
        product_id:
          type: integer
        organizer_name:
          type: string
        article:
          type: integer
        product_name:
          type: string
        category:
          type: string
          enum: [hair_coloring, hair_care, hair_styling, consumables, perming, eyebrows_and_eyelashes, manicure_and_pedicure, tools_and_equipment]
        description:
          type: string
        quantity:
          type: integer
    

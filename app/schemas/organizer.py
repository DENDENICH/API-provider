from enum import Enum
from typing import Optional
from pydantic import BaseModel, ConfigDict, EmailStr


class OrganizerRole(str, Enum):
    company = "company"
    supplier = "supplier"


# üîπ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
class OrganizerRegisterRequest(BaseModel):
    name: str
    role: OrganizerRole
    address: str
    inn: str
    bank_details: str
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    name_admin: str
    password: str
    email: EmailStr
    phone: str


# üîπ –°–ø–∏—Å–æ–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
class OrganizerResponse(BaseModel):
    id: int
    name: str
    role: OrganizerRole
    address: str
    inn: str
    bank_details: str


class OrganizersResponse(BaseModel):
    organizers: List[OrganizerResponse]


class OrganizerSupplyObject(BaseModel):
    id: int
    name: str